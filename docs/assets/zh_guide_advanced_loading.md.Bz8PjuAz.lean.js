import{_ as i,c as s,a2 as t,o as l}from"./chunks/framework.Dgf1XuiP.js";const e="/react-antd-admin/docs/assets/app-loading.BKeG86ME.png",g=JSON.parse('{"title":"App Loading","description":"","frontmatter":{},"headers":[],"relativePath":"zh/guide/advanced/loading.md","filePath":"zh/guide/advanced/loading.md","lastUpdated":1735389708000}'),n={name:"zh/guide/advanced/loading.md"};function p(h,a,d,o,r,k){return l(),s("div",null,a[0]||(a[0]=[t('<h1 id="loading" tabindex="-1">App Loading <a class="header-anchor" href="#loading" aria-label="Permalink to &quot;App Loading {#loading}&quot;">​</a></h1><p>应用初次启动时或者应用刷新时，出现的加载效果。</p><p><img src="'+e+`" alt="app-loading"></p><blockquote><p>代码在 <a href="https://github.com/condorheroblog/react-antd-admin/tree/main/src/plugins/loading.ts" target="_blank" rel="noreferrer">app-loading</a></p></blockquote><div class="info custom-block"><p class="custom-block-title">特此声明</p><p>loading 效果的代码属于 pure-admin 点击查看：<a href="https://github.com/pure-admin/vue-pure-admin/blob/cd21f1e050011d8f761094bf8a1e110fb8a33959/index.html#L20-L81" target="_blank" rel="noreferrer">https://github.com/pure-admin/vue-pure-admin/blob/cd21f1e050011d8f761094bf8a1e110fb8a33959/index.html#L20-L81</a></p></div><h2 id="原理" tabindex="-1">原理 <a class="header-anchor" href="#原理" aria-label="Permalink to &quot;原理&quot;">​</a></h2><p>单页面应用，用户初次进入或者刷新应用，会加载一次 <code>index.html</code>，在 React 代码注入到 应用入口之前（<code>&lt;div id=&quot;root&quot;&gt;&lt;/div&gt;</code>），页面显示白屏。为了友好的体验，在 <code>index.html</code> 显示 loading 效果。</p><p>因为 React 代码注入到 <code>index.html</code> 后，入口标签的内容最终会被替换，所以不需要担心类名冲突的问题。</p><div class="info custom-block"><p class="custom-block-title">React 代码注入前</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		.loader</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;loader&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></div><div class="info custom-block"><p class="custom-block-title">React 代码注入后</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;root&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	&lt;!-- React Code --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div></div><h2 id="关闭" tabindex="-1">关闭 <a class="header-anchor" href="#关闭" aria-label="Permalink to &quot;关闭&quot;">​</a></h2><p>在 <code>src/index.tsx</code> 文件中，注释或者移除掉 setupLoading 函数。</p><h2 id="自定义-loading-效果" tabindex="-1">自定义 loading 效果 <a class="header-anchor" href="#自定义-loading-效果" aria-label="Permalink to &quot;自定义 loading 效果&quot;">​</a></h2><p>编辑文件 <code>src/plugins/loading.ts</code>，修改代码即可。</p><p>下面几个网站提供了 loading 效果，可以自行选择。</p><div class="tip custom-block"><p class="custom-block-title">推荐</p><ul><li><a href="https://css-loaders.com/" target="_blank" rel="noreferrer">CSS Loaders</a></li><li><a href="https://10015.io/tools/css-loader-generator" target="_blank" rel="noreferrer">CSS Loader Generator</a></li><li><a href="https://cssloaders.github.io/" target="_blank" rel="noreferrer">Loaders</a></li></ul></div><h2 id="为什么不使用-vite-plugin-app-loading-插件" tabindex="-1">为什么不使用 vite-plugin-app-loading 插件？ <a class="header-anchor" href="#为什么不使用-vite-plugin-app-loading-插件" aria-label="Permalink to &quot;为什么不使用 vite-plugin-app-loading 插件？&quot;">​</a></h2><p>代码非常的简单，引入插件反而比较复杂。</p><p>请自行决定，链接在此：<a href="https://github.com/hooray/vite-plugin-app-loading" target="_blank" rel="noreferrer">https://github.com/hooray/vite-plugin-app-loading</a></p>`,19)]))}const E=i(n,[["render",p]]);export{g as __pageData,E as default};
